[
    {
        "id": "debugLevel",
        "name": "Debug Level",
        "section": "General Options",
        "description": "Debug level of the output of irace. Set this to 0 to silence all debug messages. Higher values provide more verbose debug messages.",
        "type": "numeric",
        "default": 0,
        "min": 0,
        "step": 1,
        "max": 4
      },
      {
        "id": "seed",
        "name": "Seed",
        "section": "General Options",
        "description": "Seed of the random number generator (by default, generate a random seed).",
        "type": "numeric",
        "default": null,
        "min": null,
        "step": null,
        "max": null
      },
      {
        "id": "repairConfiguration",
        "name": "Repair Configuration",
        "section": "General Options",
        "description": "User-defined R function that takes a configuration generated by irace and repairs it.",
        "type": "atext",
        "default": null
      },
      {
        "id": "postSelection",
        "name": "Post Selection",
        "section": "General Options",
        "description": "Percentage of the configuration budget used to perform a postselection race of the best configurations of each iteration after the execution of irace.",
        "type": "numeric",
        "default": 0,
        "min": null,
        "step": null,
        "max": null
      },
      {
        "id": "digits",
        "name": "Digits",
        "section": "General Options",
        "description": "Maximum number of decimal places that are significant for numerical (real) parameters.",
        "type": "numeric",
        "default": 4,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "aclib",
        "name": "Aclib",
        "section": "General Options",
        "description": "Enable/disable AClib mode. This option enables compatibility with GenericWrapper4AC as targetRunner script.",
        "type": "bool",
        "default": false
      },
      {
        "id": "elitist",
        "name": "Elitist",
        "section": "Elitist Irace",
        "description": "Enable/disable elitist irace.",
        "type": "bool",
        "default": true
      },
      {
        "id": "elitistNewInstances",
        "name": "Elitist New Instances",
        "section": "Elitist Irace",
        "description": "Number of instances added to the execution list before previous instances in elitist irace.",
        "type": "numeric",
        "default": 1,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "elitistLimit",
        "name": "Elitist Limit",
        "section": "Elitist Irace",
        "description": "In elitist irace, maximum number per race of elimination tests that do not eliminate a configuration. Use 0 for no limit.",
        "type": "numeric",
        "default": 2,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "nbIterations",
        "name": "nbIterations",
        "section": "Internal Irace Options",
        "description": "Number of iterations.",
        "type": "numeric",
        "default": null,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "nbExperimentsPerIteration",
        "name": "nbExperimentsPerIteration",
        "section": "Internal Irace Options",
        "description": "Number of runs of the target algorithm per iteration.",
        "type": "numeric",
        "default": null,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "sampleInstances",
        "name": "Sample Instances",
        "section": "Internal Irace Options",
        "description": "Randomly sample the training instances or use them in the order given.",
        "type": "bool",
        "default": true
      },
      {
        "id": "minNbSurvival",
        "name": "minNbSurvival",
        "section": "Internal Irace Options",
        "description": "Minimum number of configurations needed to continue the execution of each race (iteration).",
        "type": "numeric",
        "default": null,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "nbConfigurations",
        "name": "nbConfigurations",
        "section": "Internal Irace Options",
        "description": "Number of configurations to be sampled and evaluated at each iteration.",
        "type": "numeric",
        "default": null,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "mu",
        "name": "mu",
        "section": "Internal Irace Options",
        "description": "Parameter used to define the number of configurations sampled and evaluated at each iteration.",
        "type": "numeric",
        "default": 5,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "softRestart",
        "name": "Soft Restart",
        "section": "Internal Irace Options",
        "description": "Enable/disable the soft restart strategy that avoids premature convergence of the probabilistic model.",
        "type": "bool",
        "default": true
      },
      {
        "id": "softRestartThreshold",
        "name": "Soft Restart Threshold",
        "section": "Internal Irace Options",
        "description": "Soft restart threshold value for numerical parameters. If NA, NULL or \"\", it is computed as 10^-digits.",
        "type": "numeric",
        "default": null,
        "min": null,
        "step": null,
        "max": null
      },
      {
        "id": "deterministic",
        "name": "Deterministic",
        "section": "Target Algorithm Execution",
        "description": "If the target algorithm is deterministic, configurations will be evaluated only once per instance.",
        "type": "bool",
        "default": false
      },
      {
        "id": "parallel",
        "name": "Parallel",
        "section": "Target Algorithm Execution",
        "description": "Number of calls to targetRunner to execute in parallel. Values 0 or 1 mean no parallelization.",
        "type": "numeric",
        "default": 0,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "loadBalancing",
        "name": "Load Balancing",
        "section": "Target Algorithm Execution",
        "description": "Enable/disable load-balancing when executing experiments in parallel. Load-balancing makes better use of computing resources, but increases communication overhead. If this overhead is large, disabling load-balancing may be faster.",
        "type": "bool",
        "default": true
      },
      {
        "id": "mpi",
        "name": "mpi",
        "section": "Target Algorithm Execution",
        "description": "Enable/disable MPI. Use Rmpi to execute targetRunner in parallel (parameter parallel is the number of slaves).",
        "type": "bool",
        "default": false
      },
      {
        "id": "batchmode",
        "name": "Batchmode",
        "section": "Target Algorithm Execution",
        "description": "Specify how irace waits for jobs to finish when targetRunner submits jobs to a batch cluster: sge, pbs, torque or slurm. targetRunner must submit jobs to the cluster using, for example, qsub.",
        "type": "atext",
        "default": null
      },
      {
        "id": "maxExperiments",
        "name": "Max Experiments",
        "section": "Tunning Budget",
        "description": "Maximum number of runs (invocations of targetRunner) that will be performed. It determines the maximum budget of experiments for the tuning.",
        "type": "numeric",
        "default": 0,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "maxTime",
        "name": "Max Time",
        "section": "Tunning Budget",
        "description": "Maximum total execution time in seconds for the executions of targetRunner. targetRunner must return two values: cost and time.",
        "type": "numeric",
        "default": 0,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "budgetEstimation",
        "name": "Budget Estimation",
        "section": "Tunning Budget",
        "description": "Fraction (smaller than 1) of the budget used to estimate the mean computation time of a configuration. Only used when maxTime > 0",
        "type": "numeric",
        "default": 0.02,
        "min": 0.0,
        "step": null,
        "max": null
      },
      {
        "id": "testType",
        "name": "Test Type",
        "section": "Statistical Test",
        "description": "Statistical test used for elimination. Default test is always F-test unless capping is enabled, in which case the default test is t-test. Valid values are: F-test (Friedman test), t-test (pairwise t-tests with no correction), t-test-bonferroni (t-test with Bonferroni's correction for multiple comparisons), t-test-holm (t-test with Holm's correction for multiple comparisons).",
        "type": "list",
        "default": "F-test",
        "values": [
          "F-test",
          "t-test",
          "t-test-bonferroni",
          "t-test-holm"
        ]
      },
      {
        "id": "firstTest",
        "name": "First Test",
        "section": "Statistical Test",
        "description": "Number of instances evaluated before the first elimination test. It must be a multiple of eachTest.",
        "type": "numeric",
        "default": 5,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "eachTest",
        "name": "Each Test",
        "section": "Statistical Test",
        "description": "Number of instances evaluated between elimination tests.",
        "type": "numeric",
        "default": 1,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "confidence",
        "name": "Confidence",
        "section": "Statistical Test",
        "description": "Confidence level for the elimination test.",
        "type": "numeric",
        "default": 0.95,
        "min": 0.0,
        "step": null,
        "max": 0.99
      },
      {
        "id": "capping",
        "name": "Capping",
        "section": "Adaptive Capping",
        "description": "Enable the use of adaptive capping, a technique designed for minimizing the computation time of configurations. This is only available when elitist is active.",
        "type": "bool",
        "default": false
      },
      {
        "id": "cappingType",
        "name": "Capping Type",
        "section": "Adaptive Capping",
        "description": "Measure used to obtain the execution bound from the performance of the elite configurations: median, mean, worst, best.",
        "type": "list",
        "default": "median",
        "values": [
          "median",
          "mean",
          "best",
          "worst"
        ]
      },
      {
        "id": "boundType",
        "name": "Bound Type",
        "section": "Adaptive Capping",
        "description": "Method to calculate the mean performance of elite configurations: candidate or instance.",
        "type": "list",
        "default": "candidate",
        "values": [
          "candidate",
          "instance"
        ]
      },
      {
        "id": "boundMax",
        "name": "Bound Max",
        "section": "Adaptive Capping",
        "description": "Maximum execution bound for targetRunner. It must be specified when capping is enabled.",
        "type": "numeric",
        "default": 0,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "boundDigits",
        "name": "Bound Digits",
        "section": "Adaptive Capping",
        "description": "Precision used for calculating the execution time. It must be specified when capping is enabled.",
        "type": "numeric",
        "default": 0,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "boundPar",
        "name": "Bound Par",
        "section": "Adaptive Capping",
        "description": "Penalization constant for timed out executions (executions that reach boundMax execution time).",
        "type": "numeric",
        "default": 1,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "boundAsTimeout",
        "name": "Bound as Timeout",
        "section": "Adaptive Capping",
        "description": "Replace the configuration cost of bounded executions with boundMax.",
        "type": "bool",
        "default": true
      },
      {
        "id": "testNbElites",
        "name": "testNbElites",
        "section": "Testing",
        "description": "Number of elite configurations returned by irace that will be tested if test instances are provided.",
        "type": "numeric",
        "default": 1,
        "min": 0,
        "step": 1,
        "max": null
      },
      {
        "id": "testIterationElites",
        "name": "Test Iteration Elites",
        "section": "Testing",
        "description": "Enable/disable testing the elite configurations found at each iteration.",
        "type": "bool",
        "default": false
      }
]